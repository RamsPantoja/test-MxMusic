{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\dbmusic\\\\Uploads\\\\data\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\dbmusic\",\"filename\":\"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\dbmusic\\\\Uploads\\\\data\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\dbmusic\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic",
      "filename": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nvar _gridfsStream = _interopRequireDefault(require(\"gridfs-stream\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _multer = _interopRequireDefault(require(\"multer\"));\n\nvar _multerGridfsStorage = _interopRequireDefault(require(\"multer-gridfs-storage\"));\n\nvar _methodOverride = _interopRequireDefault(require(\"method-override\"));\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar fileInfoSchema = new _mongoose[\"default\"].Schema({\n  originalname: String,\n  filename: String,\n  duracion: Number,\n  contentType: String\n});\n\nvar fileInfo = _mongoose[\"default\"].model('fs.files', fileInfoSchema);\n\n_mongoose[\"default\"].set('useFindAndModify', false);\n\nvar app = (0, _express[\"default\"])(); //middleware\n\napp.use(_bodyParser[\"default\"].json());\napp.use((0, _methodOverride[\"default\"])('_method'));\napp.set('views', 'C:/Users/Rams/Documents/Web/Spotify/dbmusic/Uploads/views');\napp.set('view engine', 'ejs'); //MongoURI\n\nvar MongoURI = 'mongodb://localhost/spotifydb'; //mongo connection\n\n_mongoose[\"default\"].connect(MongoURI, {\n  useNewUrlParser: true\n});\n\nvar conn = _mongoose[\"default\"].connection;\n_gridfsStream[\"default\"].mongo = _mongoose[\"default\"].mongo;\nvar gfs;\nconn.once('open', function () {\n  console.log('--connection open--');\n  gfs = (0, _gridfsStream[\"default\"])(conn.db);\n  gfs.collection('fs');\n}); //Storage Engine\n\nvar storage = new _multerGridfsStorage[\"default\"]({\n  url: MongoURI,\n  file: function file(req, _file) {\n    return new Promise(function (resolve, reject) {\n      var filename = _path[\"default\"].parse(_file.originalname).name;\n\n      var fileInfo = {\n        filename: filename + _path[\"default\"].extname(_file.originalname)\n      };\n      resolve(fileInfo);\n    });\n  }\n});\nvar upload = (0, _multer[\"default\"])({\n  storage: storage\n}); // @route GET /\n// @desc Loads form\n\napp.get('/', function (req, res) {\n  res.render('index');\n}); // @route POST /upload\n// @desc Uploads files to DB\n\napp.post('/upload', upload.single('file'), function (req, res) {\n  res.json({\n    file: req.file\n  });\n}); //@route GET /song/:filename\n//@desc display song\n\napp.get('/song/:filename', function (req, res) {\n  gfs.files.findOne({\n    filename: req.params.filename\n  }, function (err, file) {\n    if (!file || file.length === 0) {\n      return res.status(404).json({\n        err: 'No file'\n      });\n    }\n\n    if (file.contentType === 'audio/x-m4a') {\n      var readstream = gfs.createReadStream(file.filename);\n      readstream.pipe(res);\n    } else {\n      return res.status(404).json({\n        err: 'Not an File'\n      });\n    }\n  });\n});\napp.listen(4000, function () {\n  console.log('Server ON: http://localhost:4000');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fileInfoSchema",
        "mongoose",
        "Schema",
        "originalname",
        "String",
        "filename",
        "duracion",
        "Number",
        "contentType",
        "fileInfo",
        "model",
        "set",
        "app",
        "use",
        "bodyParser",
        "json",
        "MongoURI",
        "connect",
        "useNewUrlParser",
        "conn",
        "connection",
        "Grid",
        "mongo",
        "gfs",
        "once",
        "console",
        "log",
        "db",
        "collection",
        "storage",
        "GridFsStorage",
        "url",
        "file",
        "req",
        "Promise",
        "resolve",
        "reject",
        "path",
        "parse",
        "name",
        "extname",
        "upload",
        "get",
        "res",
        "render",
        "post",
        "single",
        "files",
        "findOne",
        "params",
        "err",
        "length",
        "status",
        "readstream",
        "createReadStream",
        "pipe",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\Rams\\Documents\\Web\\Spotify\\dbmusic\\Uploads\\data",
      "sourcesContent": [
        "import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport Grid from 'gridfs-stream';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport GridFsStorage from 'multer-gridfs-storage';\r\nimport methodOverride from 'method-override';\r\nimport crypto from 'crypto';\r\nimport path from 'path';\r\n\r\nconst fileInfoSchema = new mongoose.Schema({\r\n    originalname: String,\r\n    filename: String,\r\n    duracion: Number,\r\n    contentType: String\r\n});\r\n\r\nconst fileInfo = mongoose.model('fs.files', fileInfoSchema);\r\n\r\nmongoose.set('useFindAndModify', false);\r\n\r\nconst app = express();\r\n\r\n//middleware\r\n\r\napp.use(bodyParser.json());\r\napp.use(methodOverride('_method'));\r\n\r\n\r\napp.set('views', 'C:/Users/Rams/Documents/Web/Spotify/dbmusic/Uploads/views');\r\napp.set('view engine', 'ejs');\r\n\r\n\r\n//MongoURI\r\n\r\nconst MongoURI = 'mongodb://localhost/spotifydb';\r\n\r\n//mongo connection\r\n\r\nmongoose.connect(MongoURI, {useNewUrlParser:true});\r\nconst conn = mongoose.connection;\r\n\r\nGrid.mongo = mongoose.mongo;\r\n\r\nvar gfs;\r\n\r\nconn.once('open', () => {\r\n    console.log('--connection open--');\r\n    gfs = Grid(conn.db);\r\n    gfs.collection('fs');\r\n});\r\n\r\n\r\n//Storage Engine\r\n\r\nconst storage = new GridFsStorage({\r\n    url: MongoURI,\r\n    file: (req, file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const filename = path.parse(file.originalname).name;\r\n          \r\n            const fileInfo = {\r\n                filename: filename + path.extname(file.originalname)\r\n            }\r\n            resolve(fileInfo);\r\n        });\r\n    }\r\n})\r\n\r\nconst upload = multer({storage});\r\n\r\n\r\n// @route GET /\r\n// @desc Loads form\r\napp.get('/', (req, res) => {\r\n    res.render('index');\r\n   \r\n});\r\n\r\n// @route POST /upload\r\n// @desc Uploads files to DB\r\n\r\napp.post('/upload', upload.single('file'), (req, res) => {\r\n    res.json({file: req.file});\r\n});\r\n\r\n\r\n//@route GET /song/:filename\r\n//@desc display song\r\n\r\napp.get('/song/:filename', (req, res) => {\r\n    gfs.files.findOne({filename: req.params.filename}, (err, file) => {\r\n        if (!file || file.length === 0) {\r\n            return res.status(404).json({\r\n                err: 'No file'\r\n            })\r\n        }\r\n        if (file.contentType === 'audio/x-m4a') {\r\n            const readstream = gfs.createReadStream(file.filename);\r\n            readstream.pipe(res);\r\n        } else {\r\n            return res.status(404).json({\r\n                err: 'Not an File'\r\n            })\r\n        }\r\n\r\n    })\r\n})\r\n\r\n\r\n\r\napp.listen(4000, () => {\r\n    console.log('Server ON: http://localhost:4000');\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1571281839717
  }
}