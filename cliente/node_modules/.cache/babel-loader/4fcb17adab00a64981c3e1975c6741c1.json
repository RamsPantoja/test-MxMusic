{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fer cordoba s\\\\Documents\\\\Web\\\\test-MxMusic\\\\cliente\\\\src\\\\components\\\\content1\\\\canciones.js\";\nimport React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SONGS_QUERY } from '../../querys/querys';\nimport './canciones.css';\n\nfunction Canciones(props) {\n  const _useQuery = useQuery(SONGS_QUERY),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return 'loading...';\n  if (error) return `Error! ${error.message}`;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Canciones\"), React.createElement(\"div\", {\n    className: \"overflow-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"songs-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, data.getSongs.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"display-song-container\",\n    onClick: e => this.trackSeleted(item.id, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-song\",\n    dir: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, item.songname), React.createElement(\"span\", {\n    className: \"row-artist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"google.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, item.artname)), React.createElement(\"span\", {\n    className: \"row-artist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"google.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, item.album))))))));\n}\n\nexport default Canciones;","map":{"version":3,"sources":["C:/Users/fer cordoba s/Documents/Web/test-MxMusic/cliente/src/components/content1/canciones.js"],"names":["React","Fragment","useQuery","SONGS_QUERY","Canciones","props","loading","error","data","message","getSongs","map","item","id","e","trackSeleted","songname","artname","album"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACSH,QAAQ,CAACC,WAAD,CADjB;AAAA,QAChBG,OADgB,aAChBA,OADgB;AAAA,QACPC,KADO,aACPA,KADO;AAAA,QACAC,IADA,aACAA,IADA;;AAEvB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAmBC,IAAI,IACpB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAsD,IAAA,OAAO,EAAGC,CAAD,IAAO,KAAKC,YAAL,CAAkBH,IAAI,CAACC,EAAvB,EAA2BC,CAA3B,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,IAAI,CAACI,QAA7C,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAG,IAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBJ,IAAI,CAACK,OAA3B,CAA7B,CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAG,IAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,IAAI,CAACM,KAA3B,CAA7B,CAHJ,CADH,CADL,CADJ,CADJ,CAFJ,CADJ;AAkBH;;AAGD,eAAed,SAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SONGS_QUERY } from '../../querys/querys';\r\nimport './canciones.css'\r\n\r\nfunction Canciones (props) {\r\n    const {loading, error, data } = useQuery(SONGS_QUERY);\r\n    if (loading) return 'loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n\r\n    return(\r\n        <Fragment>\r\n            <h1 className='title-content'>Canciones</h1>\r\n            <div className='overflow-content'>\r\n                <div className='songs-container'>\r\n                    <Fragment>\r\n                        {data.getSongs.map( item => (\r\n                            <div key={item.id} className='display-song-container' onClick={(e) => this.trackSeleted(item.id, e)}>\r\n                                <div className='title-song' dir='auto'>{item.songname}</div>\r\n                                <span className='row-artist'><a href=\"google.com\">{item.artname}</a></span>\r\n                                <span className='row-artist'><a href=\"google.com\">{item.album}</a></span>\r\n                            </div>\r\n                        ))}         \r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Canciones;"]},"metadata":{},"sourceType":"module"}