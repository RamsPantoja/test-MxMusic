{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\cliente\\\\src\\\\components\\\\Player\\\\audiocomponent.js\";\nimport React, { Fragment } from 'react';\nimport PlayerControls from './buttons_player/playercontrols';\n\nclass ComponentAudio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 'false',\n      currentTime: 0,\n      percent: 0\n    };\n    this.reactAudioPlayer = React.createRef();\n    this.togglePlay = this.togglePlay.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n    this.updateBar = this.updateBar.bind(this);\n  }\n\n  updateTime(timeStamp) {\n    let currentTime = Math.floor(timeStamp);\n    this.setState({\n      currentTime: currentTime\n    });\n  }\n\n  updateBar() {\n    let duration = this.reactAudioPlayer.current.duration;\n    let current = this.reactAudioPlayer.current.currentTime;\n    let percent = current / duration;\n    this.setState({\n      percent: percent\n    });\n  }\n\n  togglePlay() {\n    let status = this.state.playStatus;\n\n    if (status === 'false') {\n      setTimeout(() => {\n        this.reactAudioPlayer.current.play();\n      }, 0);\n      status = 'true';\n    } else {\n      this.reactAudioPlayer.current.pause();\n      status = 'false';\n    }\n\n    this.setState({\n      playStatus: status\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"audio\",\n      ref: this.reactAudioPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.props.source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(PlayerControls, {\n      percent: this.state.percent,\n      onClick: this.togglePlay,\n      currentTime: this.state.currentTime,\n      onChangeMusic: this.modifyProgressBar,\n      duration: this.props.duracion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ComponentAudio;","map":{"version":3,"sources":["C:\\Users\\Rams\\Documents\\Web\\Spotify\\cliente\\src\\components\\Player\\audiocomponent.js"],"names":["React","Fragment","PlayerControls","ComponentAudio","Component","constructor","props","state","playStatus","currentTime","percent","reactAudioPlayer","createRef","togglePlay","bind","updateTime","updateBar","timeStamp","Math","floor","setState","duration","current","status","setTimeout","play","pause","render","source","modifyProgressBar","duracion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,OADH;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKA,SAAKC,gBAAL,GAAwBX,KAAK,CAACY,SAAN,EAAxB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,SAAL,GAAiB,KAAKA,SAAL,CAAeF,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDC,EAAAA,UAAU,CAAEE,SAAF,EAAa;AACnB,QAAIR,WAAW,GAAGS,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAlB;AACA,SAAKG,QAAL,CAAc;AACVX,MAAAA,WAAW,EAAEA;AADH,KAAd;AAGH;;AAEDO,EAAAA,SAAS,GAAE;AACP,QAAIK,QAAQ,GAAG,KAAKV,gBAAL,CAAsBW,OAAtB,CAA8BD,QAA7C;AACA,QAAIC,OAAO,GAAG,KAAKX,gBAAL,CAAsBW,OAAtB,CAA8Bb,WAA5C;AACA,QAAIC,OAAO,GAAIY,OAAO,GAAGD,QAAzB;AACA,SAAKD,QAAL,CAAc;AACVV,MAAAA,OAAO,EAAEA;AADC,KAAd;AAGH;;AAEDG,EAAAA,UAAU,GAAI;AACV,QAAIU,MAAM,GAAG,KAAKhB,KAAL,CAAWC,UAAxB;;AACA,QAAKe,MAAM,KAAK,OAAhB,EAAyB;AACrBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKb,gBAAL,CAAsBW,OAAtB,CAA8BG,IAA9B;AACH,OAFS,EAEP,CAFO,CAAV;AAGAF,MAAAA,MAAM,GAAG,MAAT;AACH,KALD,MAKO;AACH,WAAKZ,gBAAL,CAAsBW,OAAtB,CAA8BI,KAA9B;AACAH,MAAAA,MAAM,GAAG,OAAT;AACH;;AAED,SAAKH,QAAL,CAAc;AACVZ,MAAAA,UAAU,EAAEe;AADF,KAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,GAAG,EAAE,KAAKhB,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C;AAAQ,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWsB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,CADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWG,OAApC;AAA6C,MAAA,OAAO,EAAE,KAAKG,UAA3D;AAAuE,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWE,WAA/F;AAA4G,MAAA,aAAa,EAAE,KAAKoB,iBAAhI;AAAmJ,MAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWwB,QAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAtDwC;;AA0D7C,eAAe3B,cAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PlayerControls from './buttons_player/playercontrols';\r\n\r\nclass ComponentAudio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playStatus: 'false',\r\n            currentTime: 0,\r\n            percent: 0\r\n        }\r\n        this.reactAudioPlayer = React.createRef();\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.updateTime = this.updateTime.bind(this);\r\n        this.updateBar = this.updateBar.bind(this);\r\n    }\r\n\r\n    updateTime (timeStamp) {\r\n        let currentTime = Math.floor(timeStamp)\r\n        this.setState({\r\n            currentTime: currentTime\r\n        })\r\n    }\r\n\r\n    updateBar(){\r\n        let duration = this.reactAudioPlayer.current.duration;\r\n        let current = this.reactAudioPlayer.current.currentTime;\r\n        let percent = (current / duration);\r\n        this.setState({\r\n            percent: percent\r\n        })\r\n    }\r\n    \r\n    togglePlay () {\r\n        let status = this.state.playStatus;\r\n        if ( status === 'false') {\r\n            setTimeout(() => {\r\n                this.reactAudioPlayer.current.play();\r\n            }, 0)\r\n            status = 'true'\r\n        } else {\r\n            this.reactAudioPlayer.current.pause();\r\n            status = 'false';\r\n        }\r\n\r\n        this.setState({\r\n            playStatus: status\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <audio id='audio' ref={this.reactAudioPlayer}><source src={this.props.source}/></audio>\r\n                <PlayerControls percent={this.state.percent} onClick={this.togglePlay} currentTime={this.state.currentTime} onChangeMusic={this.modifyProgressBar} duration={this.props.duracion}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComponentAudio;"]},"metadata":{},"sourceType":"module"}