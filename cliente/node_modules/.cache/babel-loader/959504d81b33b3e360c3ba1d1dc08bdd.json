{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RamsPantoja\\\\Documents\\\\Web\\\\test-MxMusic\\\\cliente\\\\src\\\\components\\\\content1\\\\canciones.js\";\nimport React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { SONGS_QUERY } from '../../querys/querys';\nimport './canciones.css';\n\nfunction Canciones(props) {\n  const _useQuery = useQuery(SONGS_QUERY, {\n    pollInterval: 1000\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return 'loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(data.getSongs[1]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"title-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Canciones\"), React.createElement(\"div\", {\n    className: \"overflow-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"songs-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, data.getSongs.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"display-song-container\",\n    onDoubleClick: e => props.onDoubleClick(item.source, e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title-song\",\n    dir: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, item.songname), React.createElement(\"span\", {\n    className: \"row-artist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"google.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"lol\")), React.createElement(\"span\", {\n    className: \"row-artist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"google.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"lol\"))))))));\n}\n\nexport default Canciones;","map":{"version":3,"sources":["C:/Users/RamsPantoja/Documents/Web/test-MxMusic/cliente/src/components/content1/canciones.js"],"names":["React","Fragment","useQuery","SONGS_QUERY","Canciones","props","pollInterval","loading","error","data","message","console","log","getSongs","map","item","id","e","onDoubleClick","source","songname"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,iBAAP;;AAEA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACSH,QAAQ,CAACC,WAAD,EAAa;AACjDG,IAAAA,YAAY,EAAE;AADmC,GAAb,CADjB;AAAA,QAChBC,OADgB,aAChBA,OADgB;AAAA,QACPC,KADO,aACPA,KADO;AAAA,QACAC,IADA,aACAA,IADA;;AAIvB,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,QAAL,CAAc,CAAd,CAAZ;AACA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,IAAI,IACpB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAsD,IAAA,aAAa,EAAGC,CAAD,IAAOZ,KAAK,CAACa,aAAN,CAAoBH,IAAI,CAACI,MAAzB,EAAiCF,CAAjC,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,IAAI,CAACK,QAA7C,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAG,IAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA7B,CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B;AAAG,IAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA7B,CAHJ,CADH,CADL,CADJ,CADJ,CAFJ,CADJ;AAkBH;;AAGD,eAAehB,SAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { SONGS_QUERY } from '../../querys/querys';\r\nimport './canciones.css'\r\n\r\nfunction Canciones (props) {\r\n    const {loading, error, data } = useQuery(SONGS_QUERY,{\r\n        pollInterval: 1000\r\n    });\r\n    if (loading) return 'loading...';\r\n    if (error) return `Error! ${error.message}`;\r\n    console.log(data.getSongs[1]);\r\n    return(\r\n        <Fragment>\r\n            <h1 className='title-content'>Canciones</h1>\r\n            <div className='overflow-content'>\r\n                <div className='songs-container'>\r\n                    <Fragment>\r\n                        {data.getSongs.map( item => (\r\n                            <div key={item.id} className='display-song-container' onDoubleClick={(e) => props.onDoubleClick(item.source, e)}>\r\n                                <div className='title-song' dir='auto'>{item.songname}</div>\r\n                                <span className='row-artist'><a href=\"google.com\">lol</a></span>\r\n                                <span className='row-artist'><a href=\"google.com\">lol</a></span>\r\n                            </div>\r\n                        ))}         \r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default Canciones;"]},"metadata":{},"sourceType":"module"}