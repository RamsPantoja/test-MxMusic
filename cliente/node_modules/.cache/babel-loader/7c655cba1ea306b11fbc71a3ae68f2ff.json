{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\cliente\\\\src\\\\components\\\\Player\\\\audiocomponent.js\";\nimport React, { Fragment } from 'react';\nimport PlayerControls from './buttons_player/playercontrols';\n\nclass ComponentAudio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 'play',\n      currentTime: 0,\n      percent: 0\n    };\n    this.toggleplay = this.toggleplay.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n    this.modifyProgressBar = this.modifyProgressBar.bind(this);\n  }\n\n  updateTime(timeStamp) {\n    let currentTime = Math.floor(timeStamp);\n    this.setState({\n      currentTime: currentTime\n    });\n  }\n\n  modifyProgressBar(e) {\n    this.setState({\n      percent: e\n    });\n  }\n\n  toggleplay(i) {\n    let status = this.state.playStatus;\n    let audio = document.getElementById('audio');\n\n    if (status === 'play') {\n      status = 'pause';\n      audio.play();\n    } else {\n      status = 'play';\n      audio.pause();\n    }\n\n    setInterval(() => {\n      let currentTime = audio.currentTime;\n      let duration = this.props.duracion;\n      let percent = currentTime / duration * 100;\n      console.log(currentTime);\n      this.updateTime(currentTime);\n    }, 1000);\n    this.setState({\n      playStatus: status\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"audio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.props.source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(PlayerControls, {\n      percent: this.state.percent,\n      onClick: this.toggleplay,\n      onChangeMusic: this.modifyProgressBar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ComponentAudio;","map":{"version":3,"sources":["C:\\Users\\Rams\\Documents\\Web\\Spotify\\cliente\\src\\components\\Player\\audiocomponent.js"],"names":["React","Fragment","PlayerControls","ComponentAudio","Component","constructor","props","state","playStatus","currentTime","percent","toggleplay","bind","updateTime","modifyProgressBar","timeStamp","Math","floor","setState","e","i","status","audio","document","getElementById","play","pause","setInterval","duration","duracion","console","log","render","source"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,MADH;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,OAAO,EAAE;AAHA,KAAb;AAMA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDC,EAAAA,UAAU,CAAEE,SAAF,EAAa;AACnB,QAAIN,WAAW,GAAGO,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAlB;AACA,SAAKG,QAAL,CAAc;AACVT,MAAAA,WAAW,EAAEA;AADH,KAAd;AAGH;;AAEDK,EAAAA,iBAAiB,CAACK,CAAD,EAAG;AAChB,SAAKD,QAAL,CAAc;AACVR,MAAAA,OAAO,EAAES;AADC,KAAd;AAGH;;AAEDR,EAAAA,UAAU,CAAES,CAAF,EAAK;AACX,QAAIC,MAAM,GAAG,KAAKd,KAAL,CAAWC,UAAxB;AACA,QAAIc,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;;AACA,QAAKH,MAAM,KAAK,MAAhB,EAAwB;AACpBA,MAAAA,MAAM,GAAG,OAAT;AACAC,MAAAA,KAAK,CAACG,IAAN;AACH,KAHD,MAGO;AACHJ,MAAAA,MAAM,GAAG,MAAT;AACAC,MAAAA,KAAK,CAACI,KAAN;AACH;;AAGDC,IAAAA,WAAW,CAAE,MAAM;AACf,UAAIlB,WAAW,GAAGa,KAAK,CAACb,WAAxB;AACA,UAAImB,QAAQ,GAAG,KAAKtB,KAAL,CAAWuB,QAA1B;AACA,UAAInB,OAAO,GAAID,WAAW,GAAGmB,QAAf,GAA2B,GAAzC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYtB,WAAZ;AACA,WAAKI,UAAL,CAAgBJ,WAAhB;AACH,KANU,EAMR,IANQ,CAAX;AAQA,SAAKS,QAAL,CAAc;AACVV,MAAAA,UAAU,EAAEa;AADF,KAAd;AAGH;;AAEDW,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkB;AAAQ,MAAA,GAAG,EAAE,KAAK1B,KAAL,CAAW2B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWG,OAApC;AAA6C,MAAA,OAAO,EAAE,KAAKC,UAA3D;AAAuE,MAAA,aAAa,EAAE,KAAKG,iBAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AA3DwC;;AA+D7C,eAAeX,cAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PlayerControls from './buttons_player/playercontrols';\r\n\r\nclass ComponentAudio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playStatus: 'play',\r\n            currentTime: 0,\r\n            percent: 0\r\n        }\r\n\r\n        this.toggleplay = this.toggleplay.bind(this);\r\n        this.updateTime = this.updateTime.bind(this);\r\n        this.modifyProgressBar = this.modifyProgressBar.bind(this);\r\n    }\r\n\r\n    updateTime (timeStamp) {\r\n        let currentTime = Math.floor(timeStamp)\r\n        this.setState({\r\n            currentTime: currentTime\r\n        })\r\n    }\r\n\r\n    modifyProgressBar(e){\r\n        this.setState({\r\n            percent: e\r\n        })\r\n    }\r\n    \r\n    toggleplay (i) {\r\n        let status = this.state.playStatus;\r\n        let audio = document.getElementById('audio');\r\n        if ( status === 'play') {\r\n            status = 'pause';\r\n            audio.play();\r\n        } else {\r\n            status = 'play';\r\n            audio.pause();\r\n        }\r\n\r\n\r\n        setInterval( () => {\r\n            let currentTime = audio.currentTime;\r\n            let duration = this.props.duracion;\r\n            let percent = (currentTime / duration) * 100;\r\n            console.log(currentTime);\r\n            this.updateTime(currentTime);\r\n        }, 1000);\r\n\r\n        this.setState({\r\n            playStatus: status\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <audio id='audio'><source src={this.props.source}/></audio>\r\n                <PlayerControls percent={this.state.percent} onClick={this.toggleplay} onChangeMusic={this.modifyProgressBar}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComponentAudio;"]},"metadata":{},"sourceType":"module"}