{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\RamsPantoja\\\\Documents\\\\Web\\\\test-MxMusic\\\\cliente\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\RamsPantoja\\\\Documents\\\\Web\\\\test-MxMusic\\\\cliente\\\\src\\\\App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks'; //componentes del div contenedor\n\nimport Canciones from './components/content1/canciones';\nimport Artistas from './components/content1/artistas';\nimport Albums from './components/content1/albums';\nimport Inicio from './components/Drawer/inicio';\nimport Explorar from './components/Drawer/explorar';\nimport Radio from './components/Drawer/radio'; //Componentes\n\nimport Drawer from './components/Drawer/Drawer';\nimport PlayerContainer from './components/Player/Player';\nimport Search from './components/search/search';\nimport Aside from './components/aside/aside';\nimport './App.css'; //configuracion del apollo client\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:8200/graphql',\n  onError: ({\n    networkError,\n    graphQLErrors\n  }) => {\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\n\nfunction App() {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        playStatus = _useState2[0],\n        setPlayStatus = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        trackSource = _useState4[0],\n        setTrackSource = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        songPercent = _useState6[0],\n        setSongPercent = _useState6[1];\n\n  const _useState7 = useState('0:00'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        songTime = _useState8[0],\n        setSongTime = _useState8[1];\n\n  const _useState9 = useState('0:00'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        songDuration = _useState10[0],\n        setSongDuration = _useState10[1];\n\n  const ref = React.createRef();\n\n  function onTrackSourceSelected(source, e) {\n    e.preventDefault();\n    console.log(\"track's Source: \" + source);\n    setTrackSource(source);\n  }\n\n  function minTwoDigits(num) {\n    return (num < 10 ? '0' : '') + num;\n  }\n\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Drawer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(PlayerContainer, {\n    trackSource: trackSource,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/songs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Canciones, {\n    onDoubleClick: onTrackSourceSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(Route, {\n    exact: true,\n    path: \"/artist\",\n    component: Artistas,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/albums\",\n    component: Albums,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/radio\",\n    component: Radio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Inicio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/explorar\",\n    component: Explorar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))), React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Aside, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/RamsPantoja/Documents/Web/test-MxMusic/cliente/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Route","Switch","ApolloClient","ApolloProvider","Canciones","Artistas","Albums","Inicio","Explorar","Radio","Drawer","PlayerContainer","Search","Aside","client","uri","onError","networkError","graphQLErrors","console","log","App","playStatus","setPlayStatus","trackSource","setTrackSource","songPercent","setSongPercent","songTime","setSongTime","songDuration","setSongDuration","ref","createRef","onTrackSourceSelected","source","e","preventDefault","minTwoDigits","num"],"mappings":"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","sourcesContent":["import React, {Fragment, useState} from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\n//componentes del div contenedor\r\nimport Canciones from './components/content1/canciones';\r\nimport Artistas from './components/content1/artistas';\r\nimport Albums from './components/content1/albums';\r\nimport Inicio from './components/Drawer/inicio';\r\nimport Explorar from './components/Drawer/explorar';\r\nimport Radio from './components/Drawer/radio';\r\n\r\n//Componentes\r\nimport Drawer  from './components/Drawer/Drawer';\r\nimport PlayerContainer from './components/Player/Player';\r\nimport Search from './components/search/search';\r\nimport Aside from './components/aside/aside';\r\nimport './App.css';\r\n\r\n//configuracion del apollo client\r\n\r\nconst client = new ApolloClient({\r\n  uri:'http://localhost:8200/graphql',\r\n  onError: ({networkError, graphQLErrors}) => {\r\n    console.log('graphQLErrors', graphQLErrors);\r\n    console.log('networkError', networkError);\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  const [playStatus, setPlayStatus] = useState(false);\r\n  const [trackSource, setTrackSource] = useState('');\r\n  const [songPercent, setSongPercent ] = useState(0);\r\n  const [songTime, setSongTime ] = useState('0:00');\r\n  const [songDuration, setSongDuration ] = useState('0:00');\r\n\r\n  const ref = React.createRef();\r\n\r\n function onTrackSourceSelected (source, e) {\r\n   e.preventDefault();\r\n   console.log(\"track's Source: \" + source);\r\n   setTrackSource(source);\r\n  }\r\n\r\n  function minTwoDigits (num) {\r\n    return ( num < 10 ? '0' : '') + num;\r\n  }\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Fragment>\r\n          <Drawer/>\r\n          <PlayerContainer trackSource={trackSource}/>\r\n          <div className='content'>\r\n            <Switch>\r\n              <Route exact path='/songs'>\r\n                <Canciones onDoubleClick={onTrackSourceSelected} />\r\n              </Route>\r\n              <Route exact path='/artist' component={ Artistas }/>\r\n              <Route exact path='/albums' component={ Albums }/>\r\n              <Route exact path='/radio' component={ Radio }/>\r\n              <Route exact path='/' component={ Inicio }/>\r\n              <Route exact path='/explorar' component={ Explorar }/>\r\n            </Switch>\r\n          </div>\r\n          <Search/>\r\n          <Aside/>\r\n        </Fragment>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}