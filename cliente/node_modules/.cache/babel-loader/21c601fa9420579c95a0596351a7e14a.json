{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\cliente\\\\src\\\\components\\\\Player\\\\progress_bar\\\\progressive_bar.js\";\nimport React, { Fragment } from 'react';\nimport './progressive_bar.css';\n\nclass ProgressiveBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1',\n      min: '0',\n      max: '100'\n    };\n    this.handleChangeRange = this.handleChangeRange.bind(this);\n  }\n\n  handleChangeRange(e) {\n    this.setState({\n      value: e.target.value\n    });\n  }\n\n  render() {\n    const range = Math.round(this.state.max - this.state.min);\n    const porcentage = Math.round((this.state.value - this.state.min) * 100 / range);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress_bar_time-zero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"progress_bar_width\",\n      style: {\n        width: porcentage + '%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"range\",\n      min: this.state.min,\n      max: this.state.max,\n      value: this.state.value,\n      className: \"progress_bar_time-complete\",\n      onChange: this.handleChangeRange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ProgressiveBar;","map":{"version":3,"sources":["C:\\Users\\Rams\\Documents\\Web\\Spotify\\cliente\\src\\components\\Player\\progress_bar\\progressive_bar.js"],"names":["React","Fragment","ProgressiveBar","Component","constructor","props","state","value","min","max","handleChangeRange","bind","e","setState","target","render","range","Math","round","porcentage","width"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,uBAAP;;AAGA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,KAAK,EAAC,GADI;AAEVC,MAAAA,GAAG,EAAC,GAFM;AAGVC,MAAAA,GAAG,EAAE;AAHK,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACH;;AAEDD,EAAAA,iBAAiB,CAACE,CAAD,EAAI;AACjB,SAAKC,QAAL,CAAc;AACVN,MAAAA,KAAK,EAAEK,CAAC,CAACE,MAAF,CAASP;AADN,KAAd;AAGH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKZ,KAAL,CAAWG,GAAX,GAAiB,KAAKH,KAAL,CAAWE,GAAvC,CAAd;AACA,UAAMW,UAAU,GAAGF,IAAI,CAACC,KAAL,CAAW,CAAC,KAAKZ,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,GAA/B,IAAsC,GAAtC,GAA4CQ,KAAvD,CAAnB;AACA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAoC,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAACD,UAAU,GAAC;AAAlB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAE,KAAKb,KAAL,CAAWE,GAApC;AAAyC,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAAzD;AAA8D,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAhF;AAAuF,MAAA,SAAS,EAAC,4BAAjG;AAA8H,MAAA,QAAQ,EAAE,KAAKG,iBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AA5BwC;;AA+B7C,eAAeR,cAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport './progressive_bar.css';\r\n\r\n\r\nclass ProgressiveBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           value:'1',\r\n           min:'0',\r\n           max: '100'\r\n        }\r\n        this.handleChangeRange = this.handleChangeRange.bind(this);\r\n    }\r\n\r\n    handleChangeRange(e) {\r\n        this.setState({\r\n            value: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const range = Math.round(this.state.max - this.state.min);\r\n        const porcentage = Math.round((this.state.value - this.state.min) * 100 / range);\r\n        return(\r\n            <Fragment> \r\n                <div className='progress_bar_time-zero'>\r\n                    <div className='progress_bar_width' style={{width:porcentage+'%'}}></div>\r\n                    <input type=\"range\" min={this.state.min} max={this.state.max} value={this.state.value} className='progress_bar_time-complete' onChange={this.handleChangeRange}/>\r\n                 </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProgressiveBar;"]},"metadata":{},"sourceType":"module"}