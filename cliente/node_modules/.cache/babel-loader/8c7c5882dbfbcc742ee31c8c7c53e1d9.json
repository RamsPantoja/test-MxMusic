{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rams\\\\Documents\\\\Web\\\\Spotify\\\\cliente\\\\src\\\\components\\\\Player\\\\audiocomponent.js\";\nimport React, { Fragment } from 'react';\nimport PlayerControls from './buttons_player/playercontrols';\n\nclass ComponentAudio extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playStatus: 'false',\n      audioControls: {\n        songPercent: '',\n        songTime: '',\n        songDuration: ''\n      }\n    };\n    this.reactAudioPlayer = React.createRef();\n    this.togglePlay = this.togglePlay.bind(this);\n    this.updateBar = this.updateBar.bind(this);\n  }\n\n  onTimeUpdateListener() {\n    let duration = this.reactAudioPlayer.current.duration;\n    let current = this.reactAudioPlayer.current.currentTime;\n    let percent = current / duration;\n    let audioControls = Object.assign({}, this.state.audioControls);\n    audioControls.songPercent = percent;\n    audioControls.this.setState({\n      percent: percent\n    });\n  }\n\n  togglePlay() {\n    let status = this.state.playStatus;\n\n    if (status === 'false') {\n      setTimeout(() => {\n        this.reactAudioPlayer.current.play();\n      }, 0);\n      status = 'true';\n    } else {\n      this.reactAudioPlayer.current.pause();\n      status = 'false';\n    }\n\n    this.setState({\n      playStatus: status\n    });\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"audio\", {\n      id: \"audio\",\n      ref: this.reactAudioPlayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: this.props.source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(PlayerControls, {\n      percent: this.state.percent,\n      onClick: this.togglePlay,\n      currentTime: this.state.currentTime,\n      onChangeMusic: this.modifyProgressBar,\n      duration: this.props.duracion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ComponentAudio;","map":{"version":3,"sources":["C:\\Users\\Rams\\Documents\\Web\\Spotify\\cliente\\src\\components\\Player\\audiocomponent.js"],"names":["React","Fragment","PlayerControls","ComponentAudio","Component","constructor","props","state","playStatus","audioControls","songPercent","songTime","songDuration","reactAudioPlayer","createRef","togglePlay","bind","updateBar","onTimeUpdateListener","duration","current","currentTime","percent","Object","assign","this","setState","status","setTimeout","play","pause","render","source","modifyProgressBar","duracion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,OADH;AAETC,MAAAA,aAAa,EAAE;AACXC,QAAAA,WAAW,EAAC,EADD;AAEXC,QAAAA,QAAQ,EAAE,EAFC;AAGXC,QAAAA,YAAY,EAAE;AAHH;AAFN,KAAb;AAQA,SAAKC,gBAAL,GAAwBb,KAAK,CAACc,SAAN,EAAxB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACH;;AAEDE,EAAAA,oBAAoB,GAAI;AACpB,QAAIC,QAAQ,GAAG,KAAKN,gBAAL,CAAsBO,OAAtB,CAA8BD,QAA7C;AACA,QAAIC,OAAO,GAAG,KAAKP,gBAAL,CAAsBO,OAAtB,CAA8BC,WAA5C;AACA,QAAIC,OAAO,GAAIF,OAAO,GAAGD,QAAzB;AACA,QAAIV,aAAa,GAAGc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKjB,KAAL,CAAWE,aAA7B,CAApB;AACAA,IAAAA,aAAa,CAACC,WAAd,GAA4BY,OAA5B;AACAb,IAAAA,aAAa,CACbgB,IADA,CACKC,QADL,CACc;AACVJ,MAAAA,OAAO,EAAEA;AADC,KADd;AAIH;;AAEDP,EAAAA,UAAU,GAAI;AACV,QAAIY,MAAM,GAAG,KAAKpB,KAAL,CAAWC,UAAxB;;AACA,QAAKmB,MAAM,KAAK,OAAhB,EAAyB;AACrBC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKf,gBAAL,CAAsBO,OAAtB,CAA8BS,IAA9B;AACH,OAFS,EAEP,CAFO,CAAV;AAGAF,MAAAA,MAAM,GAAG,MAAT;AACH,KALD,MAKO;AACH,WAAKd,gBAAL,CAAsBO,OAAtB,CAA8BU,KAA9B;AACAH,MAAAA,MAAM,GAAG,OAAT;AACH;;AAED,SAAKD,QAAL,CAAc;AACVlB,MAAAA,UAAU,EAAEmB;AADF,KAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,GAAG,EAAE,KAAKlB,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C;AAAQ,MAAA,GAAG,EAAE,KAAKP,KAAL,CAAW0B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,CADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWe,OAApC;AAA6C,MAAA,OAAO,EAAE,KAAKP,UAA3D;AAAuE,MAAA,WAAW,EAAE,KAAKR,KAAL,CAAWc,WAA/F;AAA4G,MAAA,aAAa,EAAE,KAAKY,iBAAhI;AAAmJ,MAAA,QAAQ,EAAE,KAAK3B,KAAL,CAAW4B,QAAxK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AApDwC;;AAwD7C,eAAe/B,cAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PlayerControls from './buttons_player/playercontrols';\r\n\r\nclass ComponentAudio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playStatus: 'false',\r\n            audioControls: {\r\n                songPercent:'',\r\n                songTime: '',\r\n                songDuration: ''\r\n            }\r\n        }\r\n        this.reactAudioPlayer = React.createRef();\r\n        this.togglePlay = this.togglePlay.bind(this);\r\n        this.updateBar = this.updateBar.bind(this);\r\n    }\r\n\r\n    onTimeUpdateListener () {\r\n        let duration = this.reactAudioPlayer.current.duration;\r\n        let current = this.reactAudioPlayer.current.currentTime;\r\n        let percent = (current / duration);\r\n        let audioControls = Object.assign({}, this.state.audioControls);\r\n        audioControls.songPercent = percent;\r\n        audioControls.\r\n        this.setState({\r\n            percent: percent\r\n        })\r\n    }\r\n    \r\n    togglePlay () {\r\n        let status = this.state.playStatus;\r\n        if ( status === 'false') {\r\n            setTimeout(() => {\r\n                this.reactAudioPlayer.current.play();\r\n            }, 0)\r\n            status = 'true'\r\n        } else {\r\n            this.reactAudioPlayer.current.pause();\r\n            status = 'false';\r\n        }\r\n\r\n        this.setState({\r\n            playStatus: status\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Fragment>\r\n                <audio id='audio' ref={this.reactAudioPlayer}><source src={this.props.source}/></audio>\r\n                <PlayerControls percent={this.state.percent} onClick={this.togglePlay} currentTime={this.state.currentTime} onChangeMusic={this.modifyProgressBar} duration={this.props.duracion}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ComponentAudio;"]},"metadata":{},"sourceType":"module"}