{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fer cordoba s\\\\Documents\\\\Web\\\\test-MxMusic\\\\cliente\\\\src\\\\components\\\\content1\\\\canciones.js\";\nimport React, { Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport { songs_query } from '../../querys/querys';\nimport './canciones.css';\nimport PlayerContainer from '../Player/Player';\n\nclass Canciones extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.trackSeleted = this.trackSeleted.bind(this);\n  }\n\n  trackSeleted(id, e) {\n    e.preventDefault();\n    console.log('track selected ' + id);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Canciones\"), React.createElement(\"div\", {\n      className: \"overflow-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"songs-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: songs_query,\n      pollInterval: 1000,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data,\n      startPolling,\n      stopPolling\n    }) => {\n      if (loading) return 'loading...';\n      if (error) return \"Error: \".concat(error.message);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, data.getSongs.map(item => React.createElement(\"div\", {\n        key: item.id,\n        className: \"display-song-container\",\n        onClick: e => trackSeleted(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title-song\",\n        dir: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, item.songname), React.createElement(\"span\", {\n        className: \"row-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"google.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, item.artname)), React.createElement(\"span\", {\n        className: \"row-artist\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"google.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, item.album)))));\n    }))));\n  }\n\n}\n\nexport default Canciones;","map":{"version":3,"sources":["C:\\Users\\fer cordoba s\\Documents\\Web\\test-MxMusic\\cliente\\src\\components\\content1\\canciones.js"],"names":["React","Fragment","Query","songs_query","PlayerContainer","Canciones","Component","constructor","props","state","trackSeleted","bind","id","e","preventDefault","console","log","render","loading","error","data","startPolling","stopPolling","message","getSongs","map","item","songname","artname","album"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAO,iBAAP;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AACA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,EAAD,EAAKC,CAAL,EAAQ;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBJ,EAAhC;AACH;;AACDK,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEd,WAAd;AAA2B,MAAA,YAAY,EAAE,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAACe,MAAAA,OAAD;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA,YAAvB;AAAqCC,MAAAA;AAArC,KAAD,KAAuD;AACpD,UAAIJ,OAAJ,EAAa,OAAO,YAAP;AACb,UAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACI,OAAvB;AACX,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,IAAI,IACpB;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACd,EAAf;AAAmB,QAAA,SAAS,EAAC,wBAA7B;AAAsD,QAAA,OAAO,EAAGC,CAAD,IAAOH,YAAY,CAACgB,IAAI,CAACd,EAAN,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwCc,IAAI,CAACC,QAA7C,CADJ,EAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAG,QAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBD,IAAI,CAACE,OAA3B,CAA7B,CAFJ,EAGI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAG,QAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBF,IAAI,CAACG,KAA3B,CAA7B,CAHJ,CADH,CADL,CADJ;AAcH,KAlBL,CADJ,CADJ,CAFJ,CADJ;AA6BH;;AA5CmC;;AA+CxC,eAAexB,SAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport { songs_query } from '../../querys/querys';\r\nimport './canciones.css'\r\nimport PlayerContainer from '../Player/Player'\r\nclass Canciones extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n\r\n        this.trackSeleted = this.trackSeleted.bind(this);\r\n    }\r\n\r\n    trackSeleted(id, e) {\r\n        e.preventDefault();\r\n        console.log('track selected ' + id);\r\n    }\r\n    render () {\r\n        return(\r\n            <Fragment>\r\n                <h1 className='title-content'>Canciones</h1>\r\n                <div className='overflow-content'>\r\n                    <div className='songs-container'>\r\n                        <Query query={songs_query} pollInterval={1000}>\r\n                            {({loading, error, data, startPolling, stopPolling}) => {\r\n                                if (loading) return 'loading...';\r\n                                if (error) return `Error: ${error.message}`;\r\n                                return (\r\n                                    <Fragment>\r\n                                        {data.getSongs.map( item => (\r\n                                            <div key={item.id} className='display-song-container' onClick={(e) => trackSeleted(item.id)}>\r\n                                                <div className='title-song' dir='auto'>{item.songname}</div>\r\n                                                <span className='row-artist'><a href=\"google.com\">{item.artname}</a></span>\r\n                                                <span className='row-artist'><a href=\"google.com\">{item.album}</a></span>\r\n                                            </div>\r\n                                        ))}\r\n                                    \r\n                                    </Fragment>\r\n                                    \r\n                                );\r\n\r\n                            }}\r\n                        </Query>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canciones;"]},"metadata":{},"sourceType":"module"}